spring.application.name=UserService

#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=${USER_SERVICE_DB_URL}
#
#spring.datasource.username=${USER_SERVICE_DB_USER}
#
#spring.datasource.password=${USER_SERVICE_DB_PASSWORD}


spring.datasource.url=jdbc:mysql://localhost:3306/user_service
spring.datasource.username=user_serviceuser
spring.datasource.password=Danish123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql: true

server.port=9090
logging.level.org.springframework.security=trace
# adding client for oauth2 server
#spring.security.user.name=user
#spring.security.user.password=password
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code, refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid, profile
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true

